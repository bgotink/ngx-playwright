on:
  push:
    branches:
      - main
  pull_request:

name: "Validation"
jobs:
  code-style:
    name: "Code Style"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: yarn

      - name: Install
        shell: bash
        run: |
          yarn install --immutable

      - name: 'Check for formatting errors (fix w/ "yarn prettier --write path/to/file")'
        run: |
          yarn prettier --check .
        shell: bash

      - name: 'Check for linting errors (fix w/ "yarn lint -c fix")'
        run: |
          yarn sn lint
        shell: bash

  build-unit:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: yarn

      - name: Install
        shell: bash
        run: |
          yarn install --immutable

      - name: Build
        shell: bash
        run: |
          yarn sn build

  integration:
    name: "Run via ${{matrix.cli}} in node.js ${{matrix.node}} on ${{matrix.os}}"
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        node:
          - 18.x
          - 20.x
        cli:
          - sn
        include:
          # Verify that everything works if using the @angular/cli
          - os: ubuntu-latest
            node: 18.x
            cli: ng
          # Test future node version(s)
          - os: ubuntu-latest
            node: 22.x
            cli: sn

    steps:
      - uses: actions/checkout@v4

      - name: "Use Node.js ${{matrix.node}}"
        uses: actions/setup-node@v4
        with:
          node-version: ${{matrix.node}}
          cache: yarn

      - name: Install
        shell: bash
        run: |
          yarn install --immutable

      - name: "Run tests"
        shell: bash
        run: |
          yarn ${{matrix.cli}} test integration

          echo "## Coverage" > "$GITHUB_STEP_SUMMARY"
          grep -vF '==' integration/results/e2e-coverage/summary.txt >> "$GITHUB_STEP_SUMMARY"

      - name: "Run tests in production"
        shell: bash
        run: |
          yarn ${{matrix.cli}} test integration --configuration production

          echo "" >> "$GITHUB_STEP_SUMMARY"
          echo "## Coverage (production)" >> "$GITHUB_STEP_SUMMARY"
          grep -vF '==' integration/results/e2e-coverage/summary.txt >> "$GITHUB_STEP_SUMMARY"

      - name: "Failing tests"
        shell: bash
        run: |
          if yarn ${{matrix.cli}} test integration --configuration failing; then
            echo "Expected command to fail"
            exit 1
          fi
